action.osmedile.intellij.stringmanip.SwitchCasePopup.text=切换大小写...
action.osmedile.intellij.stringmanip.SwitchCasePopup.description=弹出切换大小写处理工具 ...
action.osmedile.intellij.stringmanip.PopupChoiceAction.text=弹出字符串处理 ...
action.osmedile.intellij.stringmanip.PopupChoiceAction.description=弹出字符串处理 ...
action.osmedile.intellij.stringmanip.RepeatAction.text=重复上一个操作
action.osmedile.intellij.stringmanip.EscapeJavaAction.text=转义Java
action.osmedile.intellij.stringmanip.EscapeJavaAction.description=org.apache.commons.text.StringEscapeUtils#escapeJava
action.osmedile.intellij.stringmanip.UnescapeJavaAction.text=反转义Java
action.osmedile.intellij.stringmanip.UnescapeJavaAction.description=org.apache.commons.text.StringEscapeUtils#unescapeJava
action.osmedile.intellij.stringmanip.EscapeJavaScriptAction.text=转义JavaScript
action.osmedile.intellij.stringmanip.EscapeJavaScriptAction.description=org.apache.commons.text.StringEscapeUtils#反转义EcmaScript
action.osmedile.intellij.stringmanip.UnescapeJavaScriptAction.text=转义JavaScript
action.osmedile.intellij.stringmanip.UnescapeJavaScriptAction.description=org.apache.commons.text.StringEscapeUtils#反转义EcmaScript
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpRegularAction.text=C# Regular "..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpRegularAction.description=C# regular "..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpVerbatimAction.text=C# Verbatim @"..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpVerbatimAction.description=C# verbatim @"..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpInterpolatedAction.text=C# Interpolated $"..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpInterpolatedAction.description=C# interpolated $"..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpInterpolatedVerbatimAction.text=C# Interpolated Verbatim @$"..."
action.osmedile.intellij.stringmanip.escaping.EscapeCSharpInterpolatedVerbatimAction.description=C# interpolated verbatim @$"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpRegularAction.text=C# Regular "..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpRegularAction.description=C# regular "..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpVerbatimAction.text=C# Verbatim @"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpVerbatimAction.description=C# verbatim @"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpInterpolatedAction.text=C# Interpolated $"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpInterpolatedAction.description=C# interpolated $"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpInterpolatedVerbatimAction.text=C# Interpolated Verbatim @$"..."
action.osmedile.intellij.stringmanip.escaping.UnescapeCSharpInterpolatedVerbatimAction.description=C# interpolated verbatim @$"..."
action.osmedile.intellij.stringmanip.EscapeHtmlAction.text=转义HTML
action.osmedile.intellij.stringmanip.EscapeHtmlAction.description=org.apache.commons.text.StringEscapeUtils#转义HTML4
action.osmedile.intellij.stringmanip.UnescapeHtmlAction.text=反转义HTML
action.osmedile.intellij.stringmanip.UnescapeHtmlAction.description=org.apache.commons.text.StringEscapeUtils#反转义HTML4
action.osmedile.intellij.stringmanip.EscapeSQLAction.text=转义SQL
action.osmedile.intellij.stringmanip.EscapeJsonAction.text=转义JSON
action.osmedile.intellij.stringmanip.EscapeJsonAction.description=org.apache.commons.text.StringEscapeUtils#escapeJson
action.osmedile.intellij.stringmanip.UnescapeJsonAction.text=反转义JSON
action.osmedile.intellij.stringmanip.UnescapeJsonAction.description=org.apache.commons.text.StringEscapeUtils#unescapeJson
action.osmedile.intellij.stringmanip.EscapeXMLAction.text=转义XML
action.osmedile.intellij.stringmanip.EscapeXMLAction.description=org.apache.commons.text.StringEscapeUtils#escapeXml11
action.osmedile.intellij.stringmanip.UnescapeXMLAction.text=反转义XML
action.osmedile.intellij.stringmanip.UnescapeXMLAction.description=org.apache.commons.text.StringEscapeUtils#unescapeXml
action.osmedile.intellij.stringmanip.EscapePHPAction.text=转义PHP
action.osmedile.intellij.stringmanip.UnescapePHPAction.text=反转义PHP
action.StringManipulation.NormalizeUnicode.text=Unicode规范化...
action.StringManipulation.NormalizeUnicode.description=NFD/NFC/NFKD/NFKC 规范化带预览
action.StringManipulation.DiacriticsToAsciiAction.text=转换变音符号（重音）为ASCII
action.StringManipulation.DiacriticsToAsciiAction.description=将变音符号（重音）转换为ASCII
action.osmedile.intellij.stringmanip.NonAsciiToUnicodeEscapedAction.text=转义非ASCII为Unicode
action.osmedile.intellij.stringmanip.NonAsciiToUnicodeEscapedAction.description=转义非ASCII为Unicode
action.osmedile.intellij.stringmanip.UnicodeEscapedToStringAction.text=Unicode转义为字符串
action.osmedile.intellij.stringmanip.UnicodeEscapedToStringAction.description=将Unicode转义为字符串
action.StringManipulation.NormalizeActionNFD.text=Unicode规范化D (NFD)
action.StringManipulation.NormalizeActionNFD.description=规范化为D (NFD): 标准分解
action.StringManipulation.NormalizeActionNFC.text=Unicode规范化C (NFC)
action.StringManipulation.NormalizeActionNFC.description=规范化为C (NFC): 标准分解，然后标准组合
action.StringManipulation.NormalizeActionNFKD.text=Unicode规范化KD (NFKD)
action.StringManipulation.NormalizeActionNFKD.description=规范化为KD (NFKD): 标准分解
action.StringManipulation.NormalizeActionNFKC.text=Unicode规范化KC (NFKC)
action.StringManipulation.NormalizeActionNFKC.description=规范化为KC (NFKC): 标准分解，然后标准组合
action.osmedile.intellij.stringmanip.EncodeMd5HexAction.text=十六进制MD5编码
action.osmedile.intellij.stringmanip.EncodeMd5HexAction.description=十六进制MD5编码
action.osmedile.intellij.stringmanip.EncodeSha1HexAction.text=十六进制SHA-1编码
action.osmedile.intellij.stringmanip.EncodeSha1HexAction.description=十六进制SHA-1编码
action.osmedile.intellij.stringmanip.EncodeSha256HexAction.text=十六进制SHA-256编码
action.osmedile.intellij.stringmanip.EncodeSha256HexAction.description=十六进制SHA-256编码
action.osmedile.intellij.stringmanip.EncodeSha512HexAction.text=十六进制SHA-512编码
action.osmedile.intellij.stringmanip.EncodeSha512HexAction.description=十六进制SHA-512编码
action.osmedile.intellij.stringmanip.EncodeSha3_256HexAction.text=十六进制SHA3-256编码
action.osmedile.intellij.stringmanip.EncodeSha3_256HexAction.description=十六进制SHA3-256编码
action.osmedile.intellij.stringmanip.EncodeSha3_512HexAction.text=十六进制SHA3-512编码
action.osmedile.intellij.stringmanip.EncodeSha3_512HexAction.description=十六进制SHA3-512编码
action.osmedile.intellij.stringmanip.EncodeBase64Action.text=Base64编码
action.osmedile.intellij.stringmanip.EncodeBase64Action.description=Base64编码
action.osmedile.intellij.stringmanip.DecodeBase64Action.text=Base64解码
action.osmedile.intellij.stringmanip.DecodeBase64Action.description=Base64解码
action.osmedile.intellij.stringmanip.EncodeHexAction.text=十六进制编码
action.osmedile.intellij.stringmanip.EncodeHexAction.description=十六进制编码
action.osmedile.intellij.stringmanip.DecodeHexAction.text=十六进制解
action.osmedile.intellij.stringmanip.DecodeHexAction.description=十六进制解码
action.osmedile.intellij.stringmanip.URLEncodeAction.text=URL编码
action.osmedile.intellij.stringmanip.URLEncodeAction.description=URL编码 (by java.net.URLEncoder)
action.osmedile.intellij.stringmanip.URLDecodeAction.text=URL解码
action.osmedile.intellij.stringmanip.URLDecodeAction.description=URL解码 (by java.net.URLDecoder)
action.osmedile.intellij.stringmanip.encoding.URLEncodeRFC3986.text=URL编码 (RFC 3986)
action.osmedile.intellij.stringmanip.encoding.URLEncodeRFC3986.description=URL解码 (RFC 3986 - 空格字符为%20，而不是+)
action.osmedile.intellij.stringmanip.encoding.URLDecodeRFC3986.text=URL解码 (RFC 3986)
action.osmedile.intellij.stringmanip.encoding.URLDecodeRFC3986.description=URL解码 (RFC 3986 - 空格字符为%20，而不是+)
action.osmedile.intellij.stringmanip.encoding.TimestampEncodeAction.text=ISO Timestamp转纪元毫秒
action.osmedile.intellij.stringmanip.encoding.TimestampDecodeAction.text=纪元毫秒转ISO Timestamp
action.StringManipulation.SwitchStyleAction.text=切换形式
action.StringManipulation.SwitchStyleAction.description=切换形式(驼峰式, 小写短横线分隔式, 大写短横线分隔式, 蛇形式, 大写蛇形式, 点分式, 小写单词,  正常, 首字母大写)
action.osmedile.intellij.stringmanip.WordsAndCamelToConstantStyleCaseAction.text=大写蛇形式/驼峰式
action.osmedile.intellij.stringmanip.WordsAndCamelToConstantStyleCaseAction.description=切换大写蛇形式/驼峰式
action.StringManipulation.ToSnakeCaseOrCamelCase.text=蛇形式/驼峰式
action.StringManipulation.ToSnakeCaseOrCamelCase.description=切换蛇形式/驼峰式
action.StringManipulation.ToHyphenCaseAction.text=短横线分隔式/蛇形式
action.StringManipulation.ToHyphenCaseAction.description=切换短横线分隔式/蛇形式
action.StringManipulation.ToHyphenCaseOrCamelCase.text=短横线分隔式/驼峰式
action.StringManipulation.ToHyphenCaseOrCamelCase.description=切换短横线分隔式/驼峰式
action.StringManipulation.ToDotStyleAction.text=点分式/驼峰式
action.StringManipulation.ToDotStyleAction.description=切换点分式/驼峰式
action.StringManipulation.ToPascalCaseOrCamelCase.text=帕斯卡式/驼峰式
action.StringManipulation.ToPascalCaseOrCamelCase.description=切换帕斯卡式/驼峰式
action.osmedile.intellij.stringmanip.styles.ToCamelCaseOrToWordLowercaseAction.text=小写/驼峰式
action.osmedile.intellij.stringmanip.styles.ToCamelCaseOrToWordLowercaseAction.description=切换小写/驼峰式
action.StringManipulation.ToSentenceCaseOrCamelCase.text=第一个单词首字母大写/驼峰式
action.StringManipulation.ToSentenceCaseOrCamelCase.description=切换第一个单词首字母大写/驼峰式
action.osmedile.intellij.stringmanip.ToCamelCaseAction.text=首字母大写/驼峰式
action.osmedile.intellij.stringmanip.ToCamelCaseAction.description=切换首字母大写/驼峰式
action.StringManipulation.ToCamelCase.text=转为驼峰式
action.StringManipulation.ToCamelCase.description=转为驼峰式(camelCase)
action.StringManipulation.ToSnakeCase.text=转为蛇形式
action.StringManipulation.ToSnakeCase.description=转为蛇形式(snake_case)
action.StringManipulation.ToPascalCase.text=转为帕斯卡式
action.StringManipulation.ToPascalCase.description=转为帕斯卡式(PascalCase)
action.StringManipulation.ToScreamingSnakeCase.text=转为蛇形大写
action.StringManipulation.ToScreamingSnakeCase.description=转为蛇形大写(例如SCREAMING_SNAKE_CASE)
action.StringManipulation.ToCapitalizedSnakeCase.text=转为蛇形的首字母大写
action.StringManipulation.ToCapitalizedSnakeCase.description=转为蛇形式的首字母大写(例如Capitalized_Snake_Case)
action.osmedile.intellij.stringmanip.WordsCapitalizeAction.text=首字母大写
action.osmedile.intellij.stringmanip.WordsCapitalizeAction.description=首字母大写，来源于apache-commons WordUtils#capitalizeFully
action.osmedile.intellij.stringmanip.ToLowerCaseAction.text=转为小写
action.osmedile.intellij.stringmanip.ToLowerCaseAction.description=转为小写
action.osmedile.intellij.stringmanip.ToUpperCaseAction.text=转为大写
action.osmedile.intellij.stringmanip.ToUpperCaseAction.description=转为大写
action.osmedile.intellij.stringmanip.SwapCaseAction.text=反转大小写
action.osmedile.intellij.stringmanip.SwapCaseAction.description=Invert Case -> iNVERT cASE
action.StringManipulation.ToSpringEnvironmentVariable.text=转为Spring Boot系统环境变量
action.StringManipulation.OpenSettingsAction.text=打开设置...
action.osmedile.intellij.stringmanip.IncrementAction.text=递增
action.osmedile.intellij.stringmanip.IncrementAction.description=递增所选文本内的数字
action.osmedile.intellij.stringmanip.DuplicateAndIncrementAction.text=复制和递增
action.osmedile.intellij.stringmanip.DuplicateAndIncrementAction.description=复制并且递增所选文本内的数字
action.osmedile.intellij.stringmanip.DecrementAction.text=递减
action.osmedile.intellij.stringmanip.DecrementAction.description=递减所选文本内的数字
action.osmedile.intellij.stringmanip.DuplicateAndDecrementAction.text=复制和递减
action.osmedile.intellij.stringmanip.DuplicateAndDecrementAction.description=复制并且递减所选文本内的数字
action.StringManipulation.CreateSequenceAction.text=创建序列
action.StringManipulation.CreateSequenceAction.description=保留第一个数字，用递增替换所有其他数字。没有选择的插入符号将添加一个数字。
action.StringManipulation.IncrementDuplicateNumbersAction.text=递增重复数
action.StringManipulation.IncrementDuplicateNumbersAction.description=递增重复数
action.StringManipulation.Sort.text=排序行
action.StringManipulation.Sort.description=带各种功能的通用行排序
action.StringManipulation.SortTokens.text=排序分隔文本
action.StringManipulation.SortTokens.description=排序分隔文本
action.StringManipulation.SortLinesBySubSelectionAction.text=按子选择对行排序
action.StringManipulation.SortLinesBySubSelectionAction.description=按子选择对行排序-仅适用于多个插入符号
action.StringManipulation.AlignToColumns.text=按列对齐/排序行
action.StringManipulation.AlignToColumns.description=使用选定的分隔符/分隔符将选定文本格式化为列/表
action.StringManipulation.ReverseAction.text=倒排序行
action.StringManipulation.ReverseAction.description=倒排序行
action.StringManipulation.ShuffleLinesAction.text=随机排列行
action.StringManipulation.ShuffleLinesAction.description=随机排列行
action.StringManipulation.ShuffleCharacters.text=随机排列字符
action.StringManipulation.Grep.text=Grep...
action.StringManipulation.Grep.description=Grep, 反向Grep, 以grep分组 (带对话框)
action.osmedile.intellij.stringmanip.GrepAction.text=Grep
action.osmedile.intellij.stringmanip.GrepAction.description=按选定文本Grep整个文件-无对话框
action.osmedile.intellij.stringmanip.InvertedGrepAction.text=反向Grep
action.osmedile.intellij.stringmanip.InvertedGrepAction.description=按选定文本反向Grep整个文件-无对话框
action.StringManipulation.RemoveDuplicateLines.text=删除重复行
action.StringManipulation.RemoveDuplicateLines.description=删除选定文本中的重复行或多选文本中的重复行
action.StringManipulation.KeepOnlyDuplicateLines.text=只保留重复行
action.StringManipulation.KeepOnlyDuplicateLines.description=删除选定文本中的非重复行或多选文本中的行
action.osmedile.intellij.stringmanip.RemoveEmptyLinesAction.text=删除空行
action.osmedile.intellij.stringmanip.RemoveEmptyLinesAction.description=删除所选文本中的所有空格
action.StringManipulation.RemoveNewLinesAction.text=删除所有新行
action.StringManipulation.RemoveNewLinesAction.description=删除选定文本中的所有换行符
action.osmedile.intellij.stringmanip.TrimAction.text=Trim
action.osmedile.intellij.stringmanip.TrimAction.description=Trim所选文本
action.osmedile.intellij.stringmanip.TrimAllSpacesAction.text=用单个空格字符替换空格
action.osmedile.intellij.stringmanip.TrimAllSpacesAction.description=用单个空格字符替换多个空格
action.osmedile.intellij.stringmanip.RemoveAllSpacesAction.text=删除所有空格
action.osmedile.intellij.stringmanip.RemoveAllSpacesAction.description=删除所选文本中的所有空格
action.osmedile.intellij.stringmanip.swap.SwapCharacterToFromIntAction.text=在Char和Int间转换
action.osmedile.intellij.stringmanip.swap.SwapCharacterToFromIntAction.description=在int值和Unicode字符转义序列或八进制字符转义序列之间切换（根据设置）。
action.StringManipulation.MinifyJsonAction.text=压缩JSON
action.StringManipulation.MinifyJsonAction.description=使用github.com/stleary/JSON-java
action.StringManipulation.MinifyJavaScriptAction.text=压缩JavaScript
action.StringManipulation.MinifyJavaScriptAction.description=来源于github.com/wro4j/wro4j (需要 JRE 1.9+)
action.StringManipulation.ConvertJsonYamlAction.text=在JSON和YAML之间转换
action.StringManipulation.ConvertJsonYamlAction.description=检测所选内容是JSON还是YAML（1.2）并转换
action.StringManipulation.AlignCarets.text=对齐插入符号
action.StringManipulation.AlignCarets.description=通过插入空格将插入符号对齐到垂直线上
action.StringManipulation.AlignSelections.text=对齐所选内容
action.StringManipulation.AlignSelections.description=通过插入空格从两侧对齐所选内容
action.StringManipulation.AlignLeftAction.text=左对齐
action.StringManipulation.AlignLeftAction.description=对齐所选内容中的文本
action.StringManipulation.AlignCenterAction.text=居中对齐
action.StringManipulation.AlignCenterAction.description=对齐所选内容中的文本
action.StringManipulation.AlignRightAction.text=右对齐
action.StringManipulation.AlignRightAction.description=对齐所选内容中的文本
action.osmedile.intellij.stringmanip.swap.SwapWordsAction.text=切换单词
action.osmedile.intellij.stringmanip.swap.SwapWordsAction.description=切换单词 - 驼峰式, 短横线式, 蛇形式...
action.osmedile.intellij.stringmanip.swap.SwapAction.text=切换字符/选择/行/标记
action.osmedile.intellij.stringmanip.swap.SwapAction.description=取决于所选择的内容或有多少插入符号
action.osmedile.intellij.stringmanip.swap.Reverse.text=反转字母
action.osmedile.intellij.stringmanip.swap.Reverse.description=反转字母: 'abc' -> 'cba'
action.StringManipulation.QuoteAction.text=加引号/去引号
action.StringManipulation.ShiftQuote.text=在 " 和 ' 和 ` 间切换或换行
action.StringManipulation.ShiftQuote.description=将所有双引号、单引号、反勾号移到下一种类型（如果不存在，则换行）
action.osmedile.intellij.stringmanip.swap.SwapQuote.text=切换 " 和 '
action.StringManipulation.SwitchFilePathSeparators.text=切换文件路径分隔符: Windows<->UNIX
action.StringManipulation.SwitchFilePathSeparators.description=切换文件路径分隔符: Windows<->UNIX
action.osmedile.intellij.stringmanip.transform.DelimitedListAction.text=转换分隔列表
action.osmedile.intellij.stringmanip.transform.DelimitedListAction.description=分隔列表 - 例如在CSV和数组中
action.osmedile.intellij.stringmanip.actions.MySelectAllOccurrencesAction.text=选择所有插入符号的所有引用
group.StringManipulation.Group.Main.text=字符串处理
group.StringManipulation.Group.EscapeUnescape.text=转义/反转义...
group.StringManipulation.Group.EscapeC.text=转义C#
group.StringManipulation.Group.UnescapeC.text=反转义C#
group.StringManipulation.Group.EncodeDecode.text=编码/解码...
group.StringManipulation.Group.SwitchCase.text=切换形式...
group.StringManipulation.Group.IncrementDecrement.text=递增/递减...
group.StringManipulation.Group.Sort.text=排序...
group.StringManipulation.Group.Filter.text=过滤/删除/Trim/压缩/转换...
group.StringManipulation.Group.Align.text=对齐...
group.StringManipulation.EditorPopupMenu.text=字符串处理
group.StringManipulation.Group.Main.description=字符串处理分组
group.StringManipulation.Group.EscapeUnescape.description=字符串处理转义分组
group.StringManipulation.Group.EscapeC.description=转义 C#
group.StringManipulation.Group.UnescapeC.description=反转义C#
group.StringManipulation.Group.EncodeDecode.description=字符串处理编码/解码写分组
group.StringManipulation.Group.SwitchCase.description=字符串处理切换形式的分组
group.StringManipulation.Group.IncrementDecrement.description=递增、递减、创建序列、唯一编号
group.StringManipulation.Group.Sort.description=排序行，分隔文本
group.StringManipulation.Group.Filter.description=过滤/删除/Trim/压缩/转换...
group.StringManipulation.Group.Align.description=文本和列对齐
group.StringManipulation.EditorPopupMenu.description=字符串处理插件
auto=<auto>
border.title.debug.column.index.value.from.the.first.row=调试(列索引=第一行的值)
border.title.sort.by.columns.example.1.2.3=按列排序(例如: "1 2 3")
button.add=添加
button.donate=捐赠
button.history=历史
button.history1=历史
button.move.down=下移
button.move.up=上移
button.remove=删除
button.reset=重置
button.reset.default.actions=重置默认操作
button.reset.to.default=重置为默认
button.test=测试
canonical.decomposition=标准分解
canonical.decomposition.followed.by.canonical.composition=标准分解，然后标准组合
checkbox.add.space.after.separator=分隔符后加空格
checkbox.add.space.before.separator=分隔符前加空格
checkbox.after.numbers=数字之后
checkbox.automatic=自动
checkbox.before.numbers=数字之前
checkbox.case.sensitive=大小写敏感
checkbox.do.not.add.selection=不添加选项.
checkbox.escape.non.ascii.after=后转义非ASCII
checkbox.full.words=全词
checkbox.group.by.level.and.separators=按级别和分隔符分组
checkbox.ignore.leading.whitespaces=&忽略前导空格
checkbox.keep.leading.indent=保持前导缩进
checkbox.partition.matching.from.not.matching=分区匹配与不匹配
checkbox.preserve.leading.whitespaces=&保留前导空格
checkbox.preserve.trailing.characters=保留尾随字符&
checkbox.process.separators.sequentially.old.behaviour=顺序处理分隔符(老操作)
checkbox.regex=正则
checkbox.sbc.case.workaround=SBC case workaround
checkbox.skip.first.row=跳过第一行
checkbox.sort.only=仅排序
checkbox.trim.lines=Trim行
checkbox.trim.values=Trim值
checkbox.unescape.unicode.before=前反转义Unicode
collator.customized.to.handle.spaces.tabs.hyphens=处理空格，制表符，连字符的自定义排序器
compatibility.decomposition=标准分解，然后标准组合
compatibility.decomposition.followed.by.canonical.composition=标准分解，然后标准组合
count.sbc.characters.as.2=将全角字符计算为2
custom.action=自定义操作
default.blank.line.or.starting.with=默认: 空行或以---开始
default.whitespaces=默认: 空格
java.s.compareto.comparetoignorecase=Java中的compareTo/compareToIgnoreCase
keep.leading.indentation.at.the.minimum.indentation.of.the.selected.lines=将前导缩进保持在所选行的最小缩进处。
label.action.detail=操作详情:
label.case.switching.add.a.separator.between.letters.and.numbers=切换形式 - 在字母和数字之间添加分隔符:
label.convert.input=输入转换:
label.convert.ints.to.character.escape.sequences.unicode.or.octal=将整型转换为字符转义序列:Unicode或八进制
label.custom.case.switching.actions=自定义切换形式操作:
label.delimiter.from.to=Delimiter From / To
label.group.separator.regex=分隔符分组正则
label.level.regex=级别正则
label.locale=本地
label.max.number.of.separators.per.line=每行最大分隔数
label.name=名称
label.note.jre.11.supports.only.unicode.10.0.0=提示: JRE 11 仅支持 Unicode 10.0.0
label.popups.can.be.customized.here=可以在这里定制弹窗:
label.popups.were.customized.if.actions.are.not.visible.or.the.order.is.wrong.fix.it.manually.here=定制弹窗。如果操作不可见或顺序错误。在这里手动修复::
label.preview=预览:
label.preview1=预览:
label.quote=引号
label.separators=分隔符:
label.separators1=分隔符:
label.source=来源
label.status=状态
label.unescaped.unicode.hex.by.character=按字符反转义Unicode十六进制:
label.unquote=反引号
lines.will.be.sorted.in.groups=每行按组排序
link.help=帮助
link.jbr.2875=JBR-2875
link.link=链接
link.menus.and.toolbars=菜单和工具栏
matchings.lines.will.act.as.separators=匹配行将充当分隔符
otherwise.process.all.at.once=否则一次性处理所有
preserves.the.number.of.tokens.per.line=保持每行标记的数量
radio.button.align.only.values=仅值对齐
radio.button.align.seperators=对齐分隔符
radio.button.ascending=&升序
radio.button.by.length=按长度
radio.button.case.insensitive=大小写不敏感
radio.button.case.sensitive=大小写敏感
radio.button.chunked=分块
radio.button.clipboard=剪切
radio.button.convert.diacritics.accents.to.ascii=将变音符(重音)转换为ASCII
radio.button.corrected.collator=校正排序器
radio.button.crlf.r.n=CRLF - \\r\\n
radio.button.default=默认
radio.button.default.comparator=默认比较器
radio.button.deflate.before.encoding=编码前压缩
radio.button.descending=&降序
radio.button.form.c.nfc=Form C (NFC)
radio.button.form.d.nfd=Form D (NFD)
radio.button.form.kc.nfkc=Form KC (NFKC)
radio.button.form.kd.nfkd=Form KD (NFKD)
radio.button.grep=Grep
radio.button.hexadecimal=十六进制
radio.button.hiearchical.sort=层级排序
radio.button.inverted.grep=反向Grep
radio.button.lf.n=LF - \\n
radio.button.mix.all.lines.together.but.keep.the.format=合并所有行(保持格式)
radio.button.natural.order.comparator=自然排序比较器
radio.button.no.compression=无压缩
radio.button.normal.sort=正常排序
radio.button.nothing=无
radio.button.octal=八进制
radio.button.preserve.blank.lines=保留空白行
radio.button.process.each.line.separatelly=分别处理每一行
radio.button.remove.blank.lines=删除空白行
radio.button.reverse=&反向
radio.button.selection=Selection
radio.button.shuffle=随机
radio.button.strip.accents=Strip accents
radio.button.unicode=Unicode
radio.button.url.safe=URL safe
radio.button.url.safe.chunked=URL safe,  chunked
radio.button.zip.before.encoding=编码前Zip
removes.diacritics.accents.from.a.string.using.org.apache.commons.lang3.stringutils.stripaccents=从字符串中删除变音符号(~= accents). 来源: org.apache.commons.lang3.StringUtils#stripAccents
repeat.last.action.text=重复最后一个操作
repeat.text=重复
reset=重置
tooltip.character.count.of.the.first.match.for.the.line.default.s=该行第一次匹配的字符计数. 默认: ^[\\s]+
use.default.and.crlf.to.be.consistent.with.samltool.com.using.java.deflater.with.nowrap.true=使用'Default'和'CRLF'与samltool.com保持一致. 使用nowrap=true的Java Deflater.
uses.level.regex.to.determine.the.level.of.nodes=用'Level regex'确定节点级别.